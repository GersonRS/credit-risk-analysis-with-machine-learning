apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: knative-eventing-operator-aggregated
  labels:
    app.kubernetes.io/version: "1.13.0"
    app.kubernetes.io/name: knative-operator
aggregationRule:
  clusterRoleSelectors:
    # This (along with escalate below) allows the Operator to pick up any
    # roles that are provided to the admin of the cluster by knative eventing
    # automatically.
    - matchExpressions:
        - { key: eventing.knative.dev/release, operator: Exists }
rules: [] # Rules are automatically filled in by the controller manager.

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: knative-eventing-operator-aggregated-stable
  labels:
    app.kubernetes.io/version: "1.13.0"
    app.kubernetes.io/name: knative-operator
aggregationRule:
  clusterRoleSelectors:
    # This (along with escalate below) allows the Operator to pick up any
    # roles that are provided to the admin of the cluster by knative eventing
    # automatically.
    - matchExpressions:
        - {
            key: app.kubernetes.io/name,
            operator: In,
            values: ["knative-eventing"],
          }
rules: [] # Rules are automatically filled in by the controller manager.

---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: knative-eventing-operator
  labels:
    app.kubernetes.io/version: "1.13.0"
    app.kubernetes.io/name: knative-operator
rules:
  - apiGroups:
      - operator.knative.dev
    resources:
      - "*"
    verbs:
      - "*"
  # Bootstrapping permissions.
  # Roles that are explicitly bound buch which are specified by this Operator
  # MUST be specified here with 'get' and 'bind'.
  - apiGroups:
      - rbac.authorization.k8s.io
    resources:
      - clusterroles
      - roles
    verbs:
      - create
      - delete
      # Escalate is necessary in order to create a role using cluster role aggregation,
      # and to allow the Operator to bootstrap itself into the necessary set of
      # permissions, even as those continue to evolve upstream.
      - escalate
      - get
      - list
      - update
  - apiGroups:
      - rbac.authorization.k8s.io
    resources:
      - clusterrolebindings
      - rolebindings
    verbs:
      - create
      - delete
      - list
      - get
      - update
  # Permissions required for Knative controller
  # infra.
  - apiGroups:
      - apiregistration.k8s.io
    resources:
      - apiservices
    verbs:
      - update
  - apiGroups:
      - ""
    resources:
      - services
    verbs:
      - create
      - delete
      - get
      - list
      - watch
  - apiGroups:
      - caching.internal.knative.dev
    resources:
      - images
    verbs:
      - "*"
  - apiGroups:
      - ""
    resources:
      - namespaces
    verbs:
      - get
      - update
      - watch
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - update
      - patch
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - create
      - delete
      - get
      - list
      - watch
  - apiGroups:
      - apps
    resources:
      - deployments
      - daemonsets
      - replicasets
      - statefulsets
    verbs:
      - create
      - delete
      - get
      - list
      - watch
  - apiGroups:
      - apiregistration.k8s.io
    resources:
      - apiservices
    verbs:
      - create
      - delete
      - get
      - list
  - apiGroups:
      - autoscaling
    resources:
      - horizontalpodautoscalers
    verbs:
      - create
      - delete
      - update
      - get
      - list
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - "*"
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - "*"
  - apiGroups:
      - batch
    resources:
      - jobs
    verbs:
      - create
      - delete
      - update
      - get
      - list
      - watch
      # Old resources that need cleaning up that are not in the knative-eventing
      # namespace.
  - apiGroups:
      - ""
    resources:
      - serviceaccounts
    resourceNames:
      - knative-eventing-operator
    verbs:
      - delete
  # for RabbitMQ messaging topology objects
  - apiGroups:
      - rabbitmq.com
    resources:
      - rabbitmqclusters
    verbs:
      - "get"
      - "list"
      - "watch"
  - apiGroups:
      - rabbitmq.com
    resources:
      - bindings
      - queues
      - exchanges
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - rabbitmq.com
    resources:
      - bindings/status
      - queues/status
      - exchanges/status
    verbs:
      - get
  # for Kafka eventing source
  - apiGroups:
      - keda.sh
    resources:
      - scaledobjects
      - scaledobjects/finalizers
      - scaledobjects/status
      - triggerauthentications
      - triggerauthentications/status
    verbs:
      - get
      - list
      - watch
      - update
      - create
      - delete
  # Internal APIs
  - apiGroups:
      - "internal.kafka.eventing.knative.dev"
    resources:
      - "consumers"
      - "consumers/status"
      - "consumergroups"
      - "consumergroups/status"
    verbs:
      - create
      - get
      - list
      - watch
      - patch
      - update
      - delete
  - apiGroups:
      - "internal.kafka.eventing.knative.dev"
    resources:
      - "consumers/finalizers"
      - "consumergroups/finalizers"
    verbs:
      - update
      - delete
  - apiGroups:
      - apps
    resources:
      - statefulsets/scale
    verbs:
      - get
      - list
      - watch
      - update
      - patch
  - apiGroups:
      - rbac.authorization.k8s.io
    resources:
      - clusterrolebindings
    verbs:
      - watch
  - apiGroups:
      - "*"
    resources:
      - configmaps
    verbs:
      - delete
  - apiGroups:
      - "*"
    resources:
      - configmaps
      - services
    verbs:
      - get
      - list
      - watch
      - update
      - create
      - delete
  - apiGroups:
      - "*"
    resources:
      - pods
    verbs:
      - list
      - update
      - get
      - watch
  - apiGroups:
      - "*"
    resources:
      - pods/finalizers
    verbs:
      - get
      - list
      - create
      - update
      - delete
  - apiGroups:
      - "*"
    resources:
      - events
    verbs:
      - patch
      - create
  - apiGroups:
      - "*"
    resources:
      - secrets
    verbs:
      - get
      - list
      - watch
      - update
      - create
      - delete
  - apiGroups:
      - "*"
    resources:
      - nodes
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - "*"
    resources:
      - serviceaccounts
    verbs:
      - get
      - list
      - watch
      - update
      - create
      - delete
  - apiGroups:
      - "*"
    resources:
      - configmaps
    resourceNames:
      - kafka-channel-config
    verbs:
      - patch
  - apiGroups:
      - "*"
    resources:
      - horizontalpodautoscalers
    resourceNames:
      - kafka-webhook
    verbs:
      - delete
  - apiGroups:
      - "*"
    resources:
      - leases
    verbs:
      - delete
  - apiGroups:
      - "*"
    resources:
      - poddisruptionbudgets
    resourceNames:
      - kafka-webhook
    verbs:
      - delete
  - apiGroups:
      - "*"
    resources:
      - services
    verbs:
      - patch
  - apiGroups:
      - "apps"
    resources:
      - deployments
    verbs:
      - deletecollection
  # Eventing TLS
  - apiGroups:
      - "cert-manager.io"
    resources:
      - certificates
      - issuers
    verbs:
      - create
      - delete
      - update
      - list
      - get
      - watch

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: operator-webhook
  labels:
    app.kubernetes.io/version: "1.13.0"
    app.kubernetes.io/name: knative-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: knative-operator-webhook
subjects:
  - kind: ServiceAccount
    name: operator-webhook
